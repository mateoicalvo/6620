--------------------------------------------------------------------------------
I1 cache:         32768 B, 32 B, 4-way associative
D1 cache:         32768 B, 32 B, direct-mapped
LL cache:         524288 B, 32 B, 8-way associative
Command:          bin/benchmark
Data file:        cachegrind.out.878
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   /root/tp2/asm/mmult.S
Auto-annotation:  off

--------------------------------------------------------------------------------
Ir          I1mr  ILmr  Dr         D1mr   DLmr  Dw         D1mw      DLmw      
--------------------------------------------------------------------------------
161,083,570 2,522 2,498 55,380,309 40,130 4,678 22,333,196 1,327,989 1,314,996  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir          I1mr ILmr Dr         D1mr   DLmr  Dw         D1mw      DLmw       file:function
--------------------------------------------------------------------------------
146,800,874   33   32 52,428,873 10,257     7 20,971,539 1,319,682 1,310,720  /root/tp2/src/benchmark.c:benchmark_correr
  3,012,297    7    7    370,387  7,784 1,625      3,255       813       813  /root/tp2/asm/mmult.S:mmult
  2,516,701  117  117    653,027  6,665     8    233,984       374        77  /build/glibc-qeih7b/glibc-2.24/stdio-common/printf_fp.c:__printf_fp_l
  1,721,970   51   51    305,406    867     1    181,944        72         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:____strtod_l_internal
    961,980   33   33    203,696      0     0    177,683        12         0  /build/glibc-qeih7b/glibc-2.24/stdlib/divrem.c:__mpn_divrem
    918,494   65   65    272,547  6,920    26    157,428        35         2  /build/glibc-qeih7b/glibc-2.24/stdio-common/vfprintf.c:vfprintf
    811,028   12   12    256,353      0     0    128,544         8         0  /build/glibc-qeih7b/glibc-2.24/stdio-common/printf_fp.c:hack_digit
    480,852   12   12    142,956      9     0     77,976        22         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:round_and_return
    474,354   13   13    116,964    153     1     90,972        66         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:str_to_mpn.isra.0
    367,848   40   40     29,488     47     5     29,463       645       470  /build/glibc-qeih7b/glibc-2.24/string/../sysdeps/mips/memcpy.S:memcpy
    308,362   12   12     65,616      4     3     59,038        10         2  /build/glibc-qeih7b/glibc-2.24/libio/fileops.c:_IO_file_xsputn@@GLIBC_2.2
    262,492    9    9     19,687      6     2          0         0         0  /build/glibc-qeih7b/glibc-2.24/string/strchrnul.c:strchrnul
    247,004   11   11    103,996     73     0     26,012     1,770         0  /root/tp2/src/matriz.c:matriz_parsear
    234,878   12   12     29,346     29     4          0         0         0  /build/glibc-qeih7b/glibc-2.24/string/strlen.c:strlen
    201,466    5    5     12,998      0     0     12,998         4         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/lshift.S:__mpn_lshift
    162,520    4    4     13,002      0     0     13,002         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/rshift.S:__mpn_rshift

--------------------------------------------------------------------------------
-- User-annotated source: /root/tp2/asm/mmult.S
--------------------------------------------------------------------------------
Ir      I1mr ILmr Dr      D1mr  DLmr Dw    D1mw DLmw 

-- line 5 ----------------------------------------
      .    .    .       .     .    .     .    .    .      .align 2
      .    .    .       .     .    .     .    .    .      .set oddspreg
      .    .    .       .     .    .     .    .    .      .globl mmult
      .    .    .       .     .    .     .    .    .      .ent mmult
      .    .    .       .     .    .     .    .    .  
      .    .    .       .     .    .     .    .    .  mmult:
      .    .    .       .     .    .     .    .    .      .frame fp, 8, ra
      .    .    .       .     .    .     .    .    .      .set noreorder
      3    1    1       0     0    0     0    0    0      .cpload t9
      .    .    .       .     .    .     .    .    .      .set reorder
      .    .    .       .     .    .     .    .    .  
      1    0    0       0     0    0     0    0    0      subu sp, sp, 8
      1    1    1       0     0    0     1    0    0      .cprestore 0
      1    0    0       0     0    0     1    0    0  	sw fp, 4(sp)
      1    0    0       0     0    0     0    0    0      move fp, sp
      .    .    .       .     .    .     .    .    .  
      .    .    .       .     .    .     .    .    .      #En el ABA de la caller
      1    0    0       0     0    0     1    0    0      sw a0, 8(fp)  #matriz_t* A esta en fp+8
      1    0    0       0     0    0     1    0    0  	sw a1, 12(fp) #matriz_t* B esta en fp+12
      1    0    0       0     0    0     1    0    0  	sw a2, 16(fp) #matriz_t* C esta en fp+16
      1    0    0       0     0    0     1    0    0      sw a3, 20(fp) #dimension (n) esta en fp+20
      .    .    .       .     .    .     .    .    .      
      1    0    0       0     0    0     0    0    0      li t3, 0   #t3 = 0 (fila)
      .    .    .       .     .    .     .    .    .  iter_filas:
    116    1    1       0     0    0     0    0    0      beq t3, a3, salir #fila == n?
     57    0    0       0     0    0     0    0    0      li t4, 0           #t4 = 0 (columna)
      .    .    .       .     .    .     .    .    .      iter_columnas:
  6,612    0    0       0     0    0     0    0    0          beq t4, a3, inc_fila    #columna == n?
  3,249    0    0       0     0    0     0    0    0          li t5, 0                   #t5 = 0 (i)
  3,249    0    0       0     0    0     0    0    0          mtc1 zero, $f6 #f6 vale cero, aca guardo sumas parciales
  3,249    0    0       0     0    0     0    0    0          mtc1 zero, $f7 #f7 seteado a cero porque trabajo con doubles
      .    .    .       .     .    .     .    .    .          iter_n:
376,884    1    1       0     0    0     0    0    0              beq t5, a3, inc_columna #i == n? -> columna ++
185,193    0    0       0     0    0     0    0    0              mul t6, a3, t3  #t6 = fila * n
185,193    0    0       0     0    0     0    0    0              add t6, t6, t5  #t6 es fila*n + i, t6 es indice de A
      .    .    .       .     .    .     .    .    .  
185,193    0    0       0     0    0     0    0    0              sll t0, t6, 3   #t0 = t6 * 8
185,193    0    0       0     0    0     0    0    0              add t0, a0, t0  #t0 tiene la direccion de A[t6]
185,193    0    0 185,193 3,299  813     0    0    0              ldc1 $f0, 0(t0) #f0 tiene el elemento de A
      .    .    .       .     .    .     .    .    .  
185,193    0    0       0     0    0     0    0    0              mul t7, t5, a3  #t7 = i * n
185,193    1    1       0     0    0     0    0    0              add t7, t7, t4  #t7 es i*n + columna, t7 es indice de B
      .    .    .       .     .    .     .    .    .  
185,193    0    0       0     0    0     0    0    0              sll t1, t7, 3   #t1 = t7 *8
185,193    0    0       0     0    0     0    0    0              add t1, a1, t1  #t1 tiene la direccion de B[t6]
185,193    0    0 185,193 4,484  812     0    0    0              ldc1 $f2, 0(t1) #f2 tiene el elemento de B
      .    .    .       .     .    .     .    .    .  
185,193    0    0       0     0    0     0    0    0              madd.d $f6, $f6, $f2, $f0 #f6 tiene A[i, j]*B[j, i] + A[i-1, j-1]*B[j-1, i-1] + ...
      .    .    .       .     .    .     .    .    .              
185,193    0    0       0     0    0     0    0    0              addi t5, t5, 1
370,386    0    0       0     0    0     0    0    0              j iter_n
      .    .    .       .     .    .     .    .    .          inc_columna:
      .    .    .       .     .    .     .    .    .          #Luego de iterar la fila de A y la columna de B, guardo en
      .    .    .       .     .    .     .    .    .          # C[ij] la suma acumulada.
  3,249    1    1       0     0    0     0    0    0          mul t8, t3, a3  #t8 = fila * n
  3,249    0    0       0     0    0     0    0    0          add t8, t8, t4  #t8 es fila*n + columna es indice de C
  3,249    0    0       0     0    0     0    0    0          sll t2, t8, 3   #t2 = t8*8
  3,249    0    0       0     0    0     0    0    0          add t2, a2, t2  #t2 tiene la direccion de C[t8]
  3,249    0    0       0     0    0 3,249  813  813          sdc1 $f6, 0(t2)
  3,249    0    0       0     0    0     0    0    0          addi t4, t4, 1
  6,498    0    0       0     0    0     0    0    0          j iter_columnas
      .    .    .       .     .    .     .    .    .      inc_fila:
     57    1    1       0     0    0     0    0    0      addi t3, t3, 1
    114    0    0       0     0    0     0    0    0      j iter_filas
      .    .    .       .     .    .     .    .    .  
      .    .    .       .     .    .     .    .    .  salir:
      1    0    0       1     1    0     0    0    0      lw fp, 4(sp)
      1    0    0       0     0    0     0    0    0      addiu sp,sp,8
      2    0    0       0     0    0     0    0    0      jr ra
      .    .    .       .     .    .     .    .    .      
      .    .    .       .     .    .     .    .    .      .end mmult

--------------------------------------------------------------------------------
Ir        I1mr ILmr Dr      D1mr  DLmr  Dw    D1mw DLmw 
--------------------------------------------------------------------------------
3,012,297    7    7 370,387 7,784 1,625 3,255  813  813  events annotated

