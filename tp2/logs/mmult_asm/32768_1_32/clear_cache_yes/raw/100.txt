--------------------------------------------------------------------------------
I1 cache:         32768 B, 32 B, 4-way associative
D1 cache:         32768 B, 32 B, direct-mapped
LL cache:         524288 B, 32 B, 8-way associative
Command:          bin/benchmark
Data file:        cachegrind.out.1268
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   /root/tp2/asm/mmult.S
Auto-annotation:  off

--------------------------------------------------------------------------------
Ir          I1mr  ILmr  Dr         D1mr    DLmr  Dw         D1mw      DLmw      
--------------------------------------------------------------------------------
197,867,678 2,536 2,504 62,424,851 336,599 8,054 25,187,006 1,338,495 1,322,592  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir          I1mr ILmr Dr         D1mr    DLmr  Dw         D1mw      DLmw       file:function
--------------------------------------------------------------------------------
146,800,874   32   31 52,428,873  10,257     7 20,971,539 1,319,682 1,310,720  /root/tp2/src/benchmark.c:benchmark_correr
 16,150,818    7    7  2,000,001 294,160 5,000     10,006     2,501     2,501  /root/tp2/asm/mmult.S:mmult
  7,958,216  137  137  2,100,093  20,078     8    733,619       449        76  /build/glibc-qeih7b/glibc-2.24/stdio-common/printf_fp.c:__printf_fp_l
  5,300,000   51   51    940,000   2,579     1    560,000       184         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:____strtod_l_internal
  2,987,620   16   16    636,999       0     0    555,589        36         0  /build/glibc-qeih7b/glibc-2.24/stdlib/divrem.c:__mpn_divrem
  2,814,863   65   65    834,898     393    26    482,505        99         2  /build/glibc-qeih7b/glibc-2.24/stdio-common/vfprintf.c:vfprintf
  2,537,504   15   15    802,765       0     0    401,336        12         0  /build/glibc-qeih7b/glibc-2.24/stdio-common/printf_fp.c:hack_digit
  1,480,000   12   12    440,000      38     0    240,000        51         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:round_and_return
  1,460,000   13   13    360,000     375     1    280,000       153         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:str_to_mpn.isra.0
  1,156,554   40   40     92,391     160     5     92,366     1,568     1,314  /build/glibc-qeih7b/glibc-2.24/string/../sysdeps/mips/memcpy.S:memcpy
    945,124   12   12    201,122       8     3    180,936        26         2  /build/glibc-qeih7b/glibc-2.24/libio/fileops.c:_IO_file_xsputn@@GLIBC_2.2
    804,292    9    9     60,322      10     2          0         0         0  /build/glibc-qeih7b/glibc-2.24/string/strchrnul.c:strchrnul
    760,080   11   11    320,028     205     0     80,020     5,439         0  /root/tp2/src/matriz.c:matriz_parsear
    720,950   12   12     90,105      48     4          0         0         0  /build/glibc-qeih7b/glibc-2.24/string/strlen.c:strlen
    704,795    5    5     49,678       0     0     49,678         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/mul_1.S:__mpn_mul_1
    620,028    5    5     40,002       0     0     40,002        12         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/lshift.S:__mpn_lshift
    500,050    9    9    140,014       9     1    120,012        36         0  /build/glibc-qeih7b/glibc-2.24/stdlib/mul.c:__mpn_mul
    500,035    4    4     40,003       0     0     40,003         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/rshift.S:__mpn_rshift
    450,096    6    6    180,030      56     0     90,027     7,544     7,500  /root/tp2/src/matriz.c:matriz_crear_desde
    380,000    5    5     60,000      38     0     40,000        51         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../include/rounding-mode.h:round_away
    333,044   15   15    151,214   3,100     1     20,308         0         0  /root/tp2/src/matriz.c:matriz_imprimir
    300,234    5    5     40,052       0     0          0         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/cmp.c:__mpn_cmp
    200,000    2    2     60,000      80     0          0         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod.c:strtod
    200,000    2    2     40,000       0     0          0         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/ieee754/dbl-64/mpn2dbl.c:__mpn_construct_double

--------------------------------------------------------------------------------
-- User-annotated source: /root/tp2/asm/mmult.S
--------------------------------------------------------------------------------
Ir        I1mr ILmr Dr        D1mr    DLmr  Dw     D1mw  DLmw  

-- line 5 ----------------------------------------
        .    .    .         .       .     .      .     .     .      .align 2
        .    .    .         .       .     .      .     .     .      .set oddspreg
        .    .    .         .       .     .      .     .     .      .globl mmult
        .    .    .         .       .     .      .     .     .      .ent mmult
        .    .    .         .       .     .      .     .     .  
        .    .    .         .       .     .      .     .     .  mmult:
        .    .    .         .       .     .      .     .     .      .frame fp, 8, ra
        .    .    .         .       .     .      .     .     .      .set noreorder
        3    1    1         0       0     0      0     0     0      .cpload t9
        .    .    .         .       .     .      .     .     .      .set reorder
        .    .    .         .       .     .      .     .     .  
        1    0    0         0       0     0      0     0     0      subu sp, sp, 8
        1    1    1         0       0     0      1     0     0      .cprestore 0
        1    0    0         0       0     0      1     0     0  	sw fp, 4(sp)
        1    0    0         0       0     0      0     0     0      move fp, sp
        .    .    .         .       .     .      .     .     .  
        .    .    .         .       .     .      .     .     .      #En el ABA de la caller
        1    0    0         0       0     0      1     0     0      sw a0, 8(fp)  #matriz_t* A esta en fp+8
        1    0    0         0       0     0      1     0     0  	sw a1, 12(fp) #matriz_t* B esta en fp+12
        1    0    0         0       0     0      1     0     0  	sw a2, 16(fp) #matriz_t* C esta en fp+16
        1    0    0         0       0     0      1     0     0      sw a3, 20(fp) #dimension (n) esta en fp+20
        .    .    .         .       .     .      .     .     .      
        1    0    0         0       0     0      0     0     0      li t3, 0   #t3 = 0 (fila)
        .    .    .         .       .     .      .     .     .  iter_filas:
      202    1    1         0       0     0      0     0     0      beq t3, a3, salir #fila == n?
      100    0    0         0       0     0      0     0     0      li t4, 0           #t4 = 0 (columna)
        .    .    .         .       .     .      .     .     .      iter_columnas:
   20,200    0    0         0       0     0      0     0     0          beq t4, a3, inc_fila    #columna == n?
   10,000    0    0         0       0     0      0     0     0          li t5, 0                   #t5 = 0 (i)
   10,000    0    0         0       0     0      0     0     0          mtc1 zero, $f6 #f6 vale cero, aca guardo sumas parciales
   10,000    0    0         0       0     0      0     0     0          mtc1 zero, $f7 #f7 seteado a cero porque trabajo con doubles
        .    .    .         .       .     .      .     .     .          iter_n:
2,020,000    1    1         0       0     0      0     0     0              beq t5, a3, inc_columna #i == n? -> columna ++
1,000,000    0    0         0       0     0      0     0     0              mul t6, a3, t3  #t6 = fila * n
1,000,000    0    0         0       0     0      0     0     0              add t6, t6, t5  #t6 es fila*n + i, t6 es indice de A
        .    .    .         .       .     .      .     .     .  
1,000,000    0    0         0       0     0      0     0     0              sll t0, t6, 3   #t0 = t6 * 8
1,000,000    0    0         0       0     0      0     0     0              add t0, a0, t0  #t0 tiene la direccion de A[t6]
1,000,000    0    0 1,000,000  25,536 2,500      0     0     0              ldc1 $f0, 0(t0) #f0 tiene el elemento de A
        .    .    .         .       .     .      .     .     .  
1,000,000    0    0         0       0     0      0     0     0              mul t7, t5, a3  #t7 = i * n
1,000,000    1    1         0       0     0      0     0     0              add t7, t7, t4  #t7 es i*n + columna, t7 es indice de B
        .    .    .         .       .     .      .     .     .  
1,000,000    0    0         0       0     0      0     0     0              sll t1, t7, 3   #t1 = t7 *8
1,000,000    0    0         0       0     0      0     0     0              add t1, a1, t1  #t1 tiene la direccion de B[t6]
1,000,000    0    0 1,000,000 268,623 2,500      0     0     0              ldc1 $f2, 0(t1) #f2 tiene el elemento de B
        .    .    .         .       .     .      .     .     .  
1,000,000    0    0         0       0     0      0     0     0              madd.d $f6, $f6, $f2, $f0 #f6 tiene A[i, j]*B[j, i] + A[i-1, j-1]*B[j-1, i-1] + ...
        .    .    .         .       .     .      .     .     .              
1,000,000    0    0         0       0     0      0     0     0              addi t5, t5, 1
2,000,000    0    0         0       0     0      0     0     0              j iter_n
        .    .    .         .       .     .      .     .     .          inc_columna:
        .    .    .         .       .     .      .     .     .          #Luego de iterar la fila de A y la columna de B, guardo en
        .    .    .         .       .     .      .     .     .          # C[ij] la suma acumulada.
   10,000    1    1         0       0     0      0     0     0          mul t8, t3, a3  #t8 = fila * n
   10,000    0    0         0       0     0      0     0     0          add t8, t8, t4  #t8 es fila*n + columna es indice de C
   10,000    0    0         0       0     0      0     0     0          sll t2, t8, 3   #t2 = t8*8
   10,000    0    0         0       0     0      0     0     0          add t2, a2, t2  #t2 tiene la direccion de C[t8]
   10,000    0    0         0       0     0 10,000 2,501 2,501          sdc1 $f6, 0(t2)
   10,000    0    0         0       0     0      0     0     0          addi t4, t4, 1
   20,000    0    0         0       0     0      0     0     0          j iter_columnas
        .    .    .         .       .     .      .     .     .      inc_fila:
      100    1    1         0       0     0      0     0     0      addi t3, t3, 1
      200    0    0         0       0     0      0     0     0      j iter_filas
        .    .    .         .       .     .      .     .     .  
        .    .    .         .       .     .      .     .     .  salir:
        1    0    0         1       1     0      0     0     0      lw fp, 4(sp)
        1    0    0         0       0     0      0     0     0      addiu sp,sp,8
        2    0    0         0       0     0      0     0     0      jr ra
        .    .    .         .       .     .      .     .     .      
        .    .    .         .       .     .      .     .     .      .end mmult

--------------------------------------------------------------------------------
Ir         I1mr ILmr Dr        D1mr    DLmr  Dw     D1mw  DLmw  
--------------------------------------------------------------------------------
16,150,818    7    7 2,000,001 294,160 5,000 10,006 2,501 2,501  events annotated

