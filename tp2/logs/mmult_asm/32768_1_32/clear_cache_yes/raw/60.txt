--------------------------------------------------------------------------------
I1 cache:         32768 B, 32 B, 4-way associative
D1 cache:         32768 B, 32 B, direct-mapped
LL cache:         524288 B, 32 B, 8-way associative
Command:          bin/benchmark
Data file:        cachegrind.out.905
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   /root/tp2/asm/mmult.S
Auto-annotation:  off

--------------------------------------------------------------------------------
Ir          I1mr  ILmr  Dr         D1mr   DLmr  Dw         D1mw      DLmw      
--------------------------------------------------------------------------------
162,871,479 2,538 2,512 55,738,119 77,501 4,853 22,488,530 1,341,172 1,315,392  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir          I1mr ILmr Dr         D1mr   DLmr  Dw         D1mw      DLmw       file:function
--------------------------------------------------------------------------------
146,800,874   32   31 52,428,873 10,257     7 20,971,539 1,319,682 1,310,720  /root/tp2/src/benchmark.c:benchmark_correr
  3,510,498    7    7    432,001  9,855 1,800      3,606       901       901  /root/tp2/asm/mmult.S:mmult
  2,814,094  146  146    735,249 43,234     8    260,729    14,513        78  /build/glibc-qeih7b/glibc-2.24/stdio-common/printf_fp.c:__printf_fp_l
  1,908,000   51   51    338,400    638     1    201,600        42         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:____strtod_l_internal
  1,067,837   16   16    225,633      0     0    196,833        12         0  /build/glibc-qeih7b/glibc-2.24/stdlib/divrem.c:__mpn_divrem
  1,017,178   65   65    301,817  3,711    26    174,344        35         2  /build/glibc-qeih7b/glibc-2.24/stdio-common/vfprintf.c:vfprintf
    898,962   15   15    284,204      1     0    142,486         4         0  /build/glibc-qeih7b/glibc-2.24/stdio-common/printf_fp.c:hack_digit
    532,800   12   12    158,400      9     0     86,400         9         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:round_and_return
    525,600   13   13    129,600     25     1    100,800        27         0  /build/glibc-qeih7b/glibc-2.24/stdlib/strtod_l.c:str_to_mpn.isra.0
    407,300   39   39     32,643  3,645     5     32,617       523       514  /build/glibc-qeih7b/glibc-2.24/string/../sysdeps/mips/memcpy.S:memcpy
    341,518   12   12     72,674      4     3     65,382        10         2  /build/glibc-qeih7b/glibc-2.24/libio/fileops.c:_IO_file_xsputn@@GLIBC_2.2
    290,692    9    9     21,802      6     2          0         0         0  /build/glibc-qeih7b/glibc-2.24/string/strchrnul.c:strchrnul
    273,680   11   11    115,228     35     0     28,820     1,988         0  /root/tp2/src/matriz.c:matriz_parsear
    260,150   12   12     32,505     58     4          0         0         0  /build/glibc-qeih7b/glibc-2.24/string/strlen.c:strlen
    223,228    5    5     14,402      0     0     14,402         4         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/lshift.S:__mpn_lshift
    207,291    5    5     14,372      0     0     14,372         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/mul_1.S:__mpn_mul_1
    180,070    4    4     14,406      0     0     14,406         0         0  /build/glibc-qeih7b/glibc-2.24/stdlib/../sysdeps/mips/rshift.S:__mpn_rshift

--------------------------------------------------------------------------------
-- User-annotated source: /root/tp2/asm/mmult.S
--------------------------------------------------------------------------------
Ir      I1mr ILmr Dr      D1mr  DLmr Dw    D1mw DLmw 

-- line 5 ----------------------------------------
      .    .    .       .     .    .     .    .    .      .align 2
      .    .    .       .     .    .     .    .    .      .set oddspreg
      .    .    .       .     .    .     .    .    .      .globl mmult
      .    .    .       .     .    .     .    .    .      .ent mmult
      .    .    .       .     .    .     .    .    .  
      .    .    .       .     .    .     .    .    .  mmult:
      .    .    .       .     .    .     .    .    .      .frame fp, 8, ra
      .    .    .       .     .    .     .    .    .      .set noreorder
      3    1    1       0     0    0     0    0    0      .cpload t9
      .    .    .       .     .    .     .    .    .      .set reorder
      .    .    .       .     .    .     .    .    .  
      1    0    0       0     0    0     0    0    0      subu sp, sp, 8
      1    1    1       0     0    0     1    0    0      .cprestore 0
      1    0    0       0     0    0     1    0    0  	sw fp, 4(sp)
      1    0    0       0     0    0     0    0    0      move fp, sp
      .    .    .       .     .    .     .    .    .  
      .    .    .       .     .    .     .    .    .      #En el ABA de la caller
      1    0    0       0     0    0     1    0    0      sw a0, 8(fp)  #matriz_t* A esta en fp+8
      1    0    0       0     0    0     1    0    0  	sw a1, 12(fp) #matriz_t* B esta en fp+12
      1    0    0       0     0    0     1    0    0  	sw a2, 16(fp) #matriz_t* C esta en fp+16
      1    0    0       0     0    0     1    0    0      sw a3, 20(fp) #dimension (n) esta en fp+20
      .    .    .       .     .    .     .    .    .      
      1    0    0       0     0    0     0    0    0      li t3, 0   #t3 = 0 (fila)
      .    .    .       .     .    .     .    .    .  iter_filas:
    122    1    1       0     0    0     0    0    0      beq t3, a3, salir #fila == n?
     60    0    0       0     0    0     0    0    0      li t4, 0           #t4 = 0 (columna)
      .    .    .       .     .    .     .    .    .      iter_columnas:
  7,320    0    0       0     0    0     0    0    0          beq t4, a3, inc_fila    #columna == n?
  3,600    0    0       0     0    0     0    0    0          li t5, 0                   #t5 = 0 (i)
  3,600    0    0       0     0    0     0    0    0          mtc1 zero, $f6 #f6 vale cero, aca guardo sumas parciales
  3,600    0    0       0     0    0     0    0    0          mtc1 zero, $f7 #f7 seteado a cero porque trabajo con doubles
      .    .    .       .     .    .     .    .    .          iter_n:
439,200    1    1       0     0    0     0    0    0              beq t5, a3, inc_columna #i == n? -> columna ++
216,000    0    0       0     0    0     0    0    0              mul t6, a3, t3  #t6 = fila * n
216,000    0    0       0     0    0     0    0    0              add t6, t6, t5  #t6 es fila*n + i, t6 es indice de A
      .    .    .       .     .    .     .    .    .  
216,000    0    0       0     0    0     0    0    0              sll t0, t6, 3   #t0 = t6 * 8
216,000    0    0       0     0    0     0    0    0              add t0, a0, t0  #t0 tiene la direccion de A[t6]
216,000    0    0 216,000 4,163  900     0    0    0              ldc1 $f0, 0(t0) #f0 tiene el elemento de A
      .    .    .       .     .    .     .    .    .  
216,000    0    0       0     0    0     0    0    0              mul t7, t5, a3  #t7 = i * n
216,000    1    1       0     0    0     0    0    0              add t7, t7, t4  #t7 es i*n + columna, t7 es indice de B
      .    .    .       .     .    .     .    .    .  
216,000    0    0       0     0    0     0    0    0              sll t1, t7, 3   #t1 = t7 *8
216,000    0    0       0     0    0     0    0    0              add t1, a1, t1  #t1 tiene la direccion de B[t6]
216,000    0    0 216,000 5,691  900     0    0    0              ldc1 $f2, 0(t1) #f2 tiene el elemento de B
      .    .    .       .     .    .     .    .    .  
216,000    0    0       0     0    0     0    0    0              madd.d $f6, $f6, $f2, $f0 #f6 tiene A[i, j]*B[j, i] + A[i-1, j-1]*B[j-1, i-1] + ...
      .    .    .       .     .    .     .    .    .              
216,000    0    0       0     0    0     0    0    0              addi t5, t5, 1
432,000    0    0       0     0    0     0    0    0              j iter_n
      .    .    .       .     .    .     .    .    .          inc_columna:
      .    .    .       .     .    .     .    .    .          #Luego de iterar la fila de A y la columna de B, guardo en
      .    .    .       .     .    .     .    .    .          # C[ij] la suma acumulada.
  3,600    1    1       0     0    0     0    0    0          mul t8, t3, a3  #t8 = fila * n
  3,600    0    0       0     0    0     0    0    0          add t8, t8, t4  #t8 es fila*n + columna es indice de C
  3,600    0    0       0     0    0     0    0    0          sll t2, t8, 3   #t2 = t8*8
  3,600    0    0       0     0    0     0    0    0          add t2, a2, t2  #t2 tiene la direccion de C[t8]
  3,600    0    0       0     0    0 3,600  901  901          sdc1 $f6, 0(t2)
  3,600    0    0       0     0    0     0    0    0          addi t4, t4, 1
  7,200    0    0       0     0    0     0    0    0          j iter_columnas
      .    .    .       .     .    .     .    .    .      inc_fila:
     60    1    1       0     0    0     0    0    0      addi t3, t3, 1
    120    0    0       0     0    0     0    0    0      j iter_filas
      .    .    .       .     .    .     .    .    .  
      .    .    .       .     .    .     .    .    .  salir:
      1    0    0       1     1    0     0    0    0      lw fp, 4(sp)
      1    0    0       0     0    0     0    0    0      addiu sp,sp,8
      2    0    0       0     0    0     0    0    0      jr ra
      .    .    .       .     .    .     .    .    .      
      .    .    .       .     .    .     .    .    .      .end mmult

--------------------------------------------------------------------------------
Ir        I1mr ILmr Dr      D1mr  DLmr  Dw    D1mw DLmw 
--------------------------------------------------------------------------------
3,510,498    7    7 432,001 9,855 1,800 3,606  901  901  events annotated

